1. Conectar a la base de datos

$conn = new mysqli("localhost", "usuario", "contraseña", "base_de_datos");
new mysqli(): Crea una nueva conexión a la base de datos MySQL utilizando la clase mysqli.
"localhost": El host del servidor de base de datos (a menudo es localhost si estás trabajando en tu propio servidor).
"usuario": Nombre de usuario para acceder a la base de datos.
"contraseña": Contraseña asociada con el usuario de la base de datos.
"base_de_datos": El nombre de la base de datos a la que quieres conectarte.

2. Verificar la conexión

if ($conn->connect_error) {
    die("Conexión fallida: " . $conn->connect_error);
}
$conn->connect_error: Verifica si hubo un error al intentar conectarse a la base de datos.
die(): Si hay un error, se muestra un mensaje de error y el script se detiene.

3. Obtener el ID del dato a eliminar

$id = $_POST['id']; // ID del dato a eliminar, proporcionado por el usuario
$_POST['id']: Extrae el valor del campo id que se envió en una solicitud POST. Este es el identificador del registro que deseas eliminar.

4. Preparar y ejecutar la consulta SQL

$sql = "DELETE FROM tabla WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("i", $id);
$stmt->execute();
$sql: La consulta SQL que se prepara. El ? es un marcador de posición para el valor del id.
$conn->prepare($sql): Prepara la consulta SQL para su ejecución. Esto ayuda a evitar inyecciones SQL al separar el código SQL de los datos.
$stmt->bind_param("i", $id): Vincula el parámetro id a la consulta SQL. El "i" indica que el parámetro es un entero (integer). Esto es importante para asegurarse de que los datos sean del tipo correcto.
$stmt->execute(): Ejecuta la consulta SQL.

5. Verificar el resultado de la eliminación

if ($stmt->affected_rows > 0) {
    echo "Registro eliminado exitosamente";
} else {
    echo "No se encontró el registro";
}
$stmt->affected_rows: Devuelve el número de filas afectadas por la consulta SQL. Si es mayor que 0, significa que la eliminación fue exitosa.
echo: Imprime un mensaje en función de si se encontró y eliminó el registro.

6. Cerrar la declaración y la conexión

$stmt->close();
$conn->close();
$stmt->close(): Cierra la declaración preparada para liberar recursos.
$conn->close(): Cierra la conexión con la base de datos.